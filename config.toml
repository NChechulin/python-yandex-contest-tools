# Read the TOML specification before editing the file!
# Link: https://toml.io/

# You can place any information you want here.
# This section is not parsed by the program and can be used to manage your config files
[info]
author = "Nikolay Chechulin"
contest_name = "Contest 5"

[config]
# Path to a folder with students submissions. It should contain something like this:
# submits
# ├── Nikolay Chechulin-92857582
# │   ├── 3-55518299-python3_7_3-OK.py
# │   ├── 6-55518632-python3_7_3-OK.py
# │   └── 9-56556460-python3_7_3-OK.py
# ├── hse-data-2021-113-92857532
# ...
submissions_dir = "../submits/"

# Path to a folder where the resulting file will be placed
output_dir = "../output/"

# Can be either `csv` or `xlsx` for Excel
output_format = "csv"

# Values which will be put into the resulting talbe
solved_symbol = "1"     # Symbol when task is correctly solved
banned_symbol = "0"     # Symbol when task was solved by banned by validator
not_solved_symbol = "0" # Symbol when task was not solved

# An array of names. They will be used:
# 1) In the output table
# 2) To match each student with their submission directory.
# The last one is done using substrings, so be sure to specify the names properly.
# If you have a directory `submits/Аксёнов Иван Иванович`, then you should add either
# `Аксёнов Иван` or `Аксёнов Иван Иванович`, not Аксенов
students_names = [
    "Chechulin Nikolay",
    "Surname Name",
    "Surname Name Patronymic",
]

# Here we introduce a config for task "A"
# **All of the tasks from the contest have to be present in the config** 
# If a contest uses numbers, then write `[config.tasks.1], ...`
# A task name will be used to match each submission with a task.
# For instance, if you have a submission file named `12-55517774-python3_7_3-OK.py`,
# then the task name should be `12`
[config.tasks.A]

# This is configuration of another task
# The task has some requirements:
# 1) Student has to use keywords `def` and `return`
# 2) Student can not use `for` keyword
[config.tasks.B]
required_tokens = ["def", "return"]
banned_tokens = ["for"]

# If you have multiple tasks with same parameters, you can use shortcuts.
# They support only numbers and letters, for instance the following will create
# 12 tasks without required tokens
[config.tasks.1-12]

# Also we can use letters. This will give us tasks C, D, E, F, G with
# `for` as required token.
# Do not mix letters and numbers!       Wrong: `[config.tasks.1-A]`
# Only 1-letter strings are supported.  Wrong: `[config.tasks.A-BY]`
# Be sure that left boundary is smaller than the right one. Wrong: `[config.tasks.12-1]
[config.tasks.C-G]
required_tokens = ["for"]
